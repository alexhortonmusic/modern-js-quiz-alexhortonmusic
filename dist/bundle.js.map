{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/combat.js","src/js/quiz.js","src/js/randoNumGen.js","src/js/robot.js","src/js/typesATV.js","src/js/typesBipedal.js","src/js/typesDrone.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\n\nfunction Combat () {\n\t// function to determine when fight is over\n\t// function fatality (player1Health, player2Health) {\n\t// \tif (player1Health <= 0) {\n\t// \t\tplayer1Health = 0;\n\t// \t\treturn 'player1';\n\t// \t}\n\t// \telse if (player2Health <= 0) {\n\t// \t\tplayer2Health = 0;\n\t// \t\treturn 'player2';\n\t// \t}\n\t// \telse {\n\t// \t\treturn 'none';\n\t// \t}\n\t// }\n};\n\n// module.exports = {Combat};\n\n\n\n\n\n\n\n\n//fucntion to determine when fight is over\n// function fatality (player1Health, player2Health) {\n// \tif (player1Health <= 0) {\n// \t\tplayer1Health = 0;\n// \t\treturn 'player1';\n// \t}\n// \telse if (player2Health <= 0) {\n// \t\tplayer2Health = 0;\n// \t\treturn 'player2';\n// \t}\n// \telse {\n// \t\treturn 'none';\n// \t}\n// }\n","'use strict';\n\nconst Combat = require('./combat');\n\n// bot types\nconst Megachine = require('./typesATV').Megachine;\nconst Bladey = require('./typesATV').Bladey;\nconst PewPew = require('./typesDrone').PewPew;\nconst WhirrrMachine = require('./typesDrone').WhirrrMachine;\nconst ThreeLegs = require('./typesBipedal').ThreeLegs;\nconst StoneHands = require('./typesBipedal').StoneHands;\n\nlet player1;\nlet player2;\nlet player1Box = $('#player1Box');\nlet player2Box = $('#player2Box');\n\nlet botArr = [\n\tMegachine,\n\tBladey,\n\tPewPew,\n\tWhirrrMachine,\n\tThreeLegs,\n\tStoneHands\n];\n\n$('.gamePlayContainer').hide();\n\n//populate bot chooser\nlet populateBotSelect = () => {\n\tfor (let i = 0, j = botArr.length; i < j; i++) {\n\t\t$('.selectBox').append(`\n\t\t\t<option class='botType'>${botArr[i].name}</option>\n\t\t`);\n\t}\n}\npopulateBotSelect();\n\n//determines which bots to instantiate and fills player boxes\nlet instaBot = (name, chosenBot, box) => {\n\tlet robot = null;\n\tlet playerName = null;\n\tif (chosenBot === 'Megachine') {\n\t\trobot = new Megachine();\n\t\t// playerName = name;\n\t} else if (chosenBot === 'Bladey') {\n\t\trobot = new Bladey();\n\t\t// playerName = name;\n\t} else if (chosenBot === 'PewPew') {\n\t\trobot = new PewPew();\n\t\t// playerName = name;\n\t} else if (chosenBot === 'WhirrrMachine') {\n\t\trobot = new WhirrrMachine();\n\t\t// playerName = name;\n\t} else if (chosenBot === 'ThreeLegs') {\n\t\trobot = new ThreeLegs();\n\t\t// playerName = name;\n\t} else if (chosenBot === 'StoneHands') {\n\t\trobot =  new StoneHands();\n\t\t// playerName = name;\n\t}\n\t//builds player boxes in DOM\n\tlet playerTitle = `<h3>${name} the ${chosenBot}!</h3>`;\n\tbox.append(playerTitle);\n\n\treturn robot;\n}\n\nfunction setupFight () {\n\tlet player1Name = $('#player1').val(),\n\t\t\tplayer1Bot = $('#player1Select').val(),\n\t\t\tplayer2Name = $('#player2').val(),\n\t\t\tplayer2Bot = $('#player2Select').val();\n\n\tif (player1Name === '' || player2Name === '') {\n\t\talert('Must fill in your name to continue!');\n\t}\n\n\t//instantiates players\n\tplayer1 = instaBot(player1Name, player1Bot, player1Box);\n\tplayer2 = instaBot(player2Name, player2Bot, player2Box);\n\n\tplayer1Box.append(`<h2 class=\"health\">${player1.health}</h2>`);\n\tplayer2Box.append(`<h2 class=\"health\">${player2.health}</h2>`);\n\t$('.gameStartContainer').empty();\n\t$('.gamePlayContainer').show();\n\tconsole.log('Fight started');\n\tbeginRound();\n};\n\n$('#startFightBtn').click(setupFight);\n\n//player clicks this button for 1 round of damage to each robot\n\nlet beginRound = function () {\n\tif (player1.health <= 0) {\n\t\tplayer1.health = 0;\n\t\treturn 'player1';\n\t}\n\telse if (player2.health <= 0) {\n\t\tplayer2.health = 0;\n\t\treturn 'player2';\n\t}\n\tconsole.log('Howdy');\n\n\n};\n\n$('#attackBtn').click(beginRound);\n","\"use strict\";\n\nvar randoRange = (min, max) => {\n\tlet range = Math.floor(Math.random() * (max - min) + min);\n\treturn range;\n}\n\nmodule.exports = {randoRange};\n","'use strict';\n\nconst randoNumGen = require('./randoNumGen');\n\nfunction Robot () { //idea to pass these values from Dan\n\tthis.minHealth = 80;\n\tthis.maxHealth = 90;\n\tthis.minDamage = 6;\n\tthis.maxDamage = 10;\n}\nfunction Drone (minHealth, maxHealth, minDamage, maxDamage) {\n\tthis.botType = 'Drone';\n}\n\nDrone.prototype = new Robot();\n\nfunction Bipedal (minHealth, maxHealth, minDamage, maxDamage) {\n\tthis.botType = 'Bipedal';\n}\n\nBipedal.prototype = new Robot();\n\nfunction ATV (minHealth, maxHealth, minDamage, maxDamage) {\n\tthis.botType = 'ATV';\n}\n\nATV.prototype = new Robot();\n\nmodule.exports = {Robot, Drone, Bipedal, ATV};\n","'use strict';\n\nconst ATV = require('./robot').ATV;\nconst randoNumGen = require('./randoNumGen');\n\nconst Megachine = function () {\n\tthis.name = 'Megachine';\n\tthis.attack = 'RollOver';\n\tthis.minHealth += 5;\n\tthis.maxHealth += 5;\n\tthis.minDamage += 0;\n\tthis.maxDamage -= 1;\n\tthis.health = randoNumGen.randoRange(this.minHealth, this.maxHealth);\n\tthis.attackDamage = randoNumGen.randoRange(this.minDamage, this.maxDamage);\n};\n\nMegachine.prototype = new ATV();\n\nconst Bladey = function () {\n\tthis.name = 'Bladey';\n\tthis.attack = 'Swirly Cutz';\n\tthis.minHealth += 2;\n\tthis.maxHealth += 2;\n\tthis.minDamage += 4;\n\tthis.maxDamage += 2;\n\tthis.health = randoNumGen.randoRange(this.minHealth, this.maxHealth);\n\tthis.attackDamage = randoNumGen.randoRange(this.minDamage, this.maxDamage);\n};\n\nBladey.prototype = new ATV();\n\nmodule.exports = {Megachine, Bladey};\n","'use strict';\n\nconst Bipedal = require('./robot').Bipedal;\nconst randoNumGen = require('./randoNumGen');\n\nconst ThreeLegs = function () {\n\tthis.name = 'ThreeLegs';\n\tthis.attack = 'Scissor Kick';\n\tthis.minHealth += 3;\n\tthis.maxHealth += 4;\n\tthis.minDamage -= 2;\n\tthis.maxDamage += 1;\n\tthis.health = randoNumGen.randoRange(this.minHealth, this.maxHealth);\n\tthis.attackDamage = randoNumGen.randoRange(this.minDamage, this.maxDamage);\n};\n\nThreeLegs.prototype = new Bipedal();\n\nconst StoneHands = function () {\n\tthis.name = 'StoneHands';\n\tthis.attack = 'Ground Pound';\n\tthis.minHealth += 5;\n\tthis.maxHealth += 5;\n\tthis.minDamage += 3;\n\tthis.maxDamage += 2;\n\tthis.health = randoNumGen.randoRange(this.minHealth, this.maxHealth);\n\tthis.attackDamage = randoNumGen.randoRange(this.minDamage, this.maxDamage);\n};\n\nStoneHands.prototype = new Bipedal();\n\nmodule.exports = {ThreeLegs, StoneHands};\n","'use strict';\n\nconst Drone = require('./robot').Drone;\nconst randoNumGen = require('./randoNumGen');\n\nconst PewPew = function () {\n\tthis.name = 'PewPew';\n\tthis.attack = 'Pew Pew Pew';\n\tthis.minHealth += 0;\n\tthis.maxHealth -= 5;\n\tthis.minDamage += 1;\n\tthis.maxDamage += 2;\n\tthis.health = randoNumGen.randoRange(this.minHealth, this.maxHealth);\n\tthis.attackDamage = randoNumGen.randoRange(this.minDamage, this.maxDamage);\n};\n\nPewPew.prototype = new Drone();\n\nconst WhirrrMachine = function () {\n\tthis.name = 'WhirrrMachine';\n\tthis.attack = 'BoneSaw';\n\tthis.minHealth -= 5;\n\tthis.maxHealth -= 3;\n\tthis.minDamage += 4;\n\tthis.maxDamage += 4;\n\tthis.health = randoNumGen.randoRange(this.minHealth, this.maxHealth);\n\tthis.attackDamage = randoNumGen.randoRange(this.minDamage, this.maxDamage);\n};\n\nWhirrrMachine.prototype = new Drone();\n\nmodule.exports = {PewPew, WhirrrMachine};\n"]}